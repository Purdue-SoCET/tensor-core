$version Generated by VerilatedVcd $end
$timescale 1ps $end
 $scope module $rootio $end
 $upscope $end
 $scope module sys_arr_pkg $end
  $var wire 32 /! N [31:0] $end
  $var wire 32 0! DW [31:0] $end
  $var wire 32 ,! MUL_LEN [31:0] $end
  $var wire 32 1! ADD_LEN [31:0] $end
 $upscope $end
 $scope module sysarr_MAC_tb $end
  $var wire 32 ,! CLK_PERIOD [31:0] $end
  $var wire 1 %! tb_clk $end
  $var wire 1 # tb_nrst $end
  $scope module mac_if $end
   $var wire 1 ) start $end
   $var wire 3 2! count [2:0] $end
   $var wire 16 * weight [15:0] $end
   $var wire 16 - in_value [15:0] $end
   $var wire 1 . MAC_shift $end
   $var wire 16 6 in_pass [15:0] $end
   $var wire 16 & in_accumulate [15:0] $end
   $var wire 16 $! out_accumulate [15:0] $end
   $var wire 1 5 value_ready $end
  $upscope $end
  $scope module dut $end
   $var wire 1 %! clk $end
   $var wire 1 # nRST $end
   $scope module mac_if $end
    $var wire 1 ) start $end
    $var wire 3 2! count [2:0] $end
    $var wire 16 * weight [15:0] $end
    $var wire 16 - in_value [15:0] $end
    $var wire 1 . MAC_shift $end
    $var wire 16 6 in_pass [15:0] $end
    $var wire 16 & in_accumulate [15:0] $end
    $var wire 16 $! out_accumulate [15:0] $end
    $var wire 1 5 value_ready $end
   $upscope $end
   $var wire 16 6 input_x [15:0] $end
   $var wire 16 / nxt_input_x [15:0] $end
   $var wire 1 7 run_latched $end
   $var wire 1 8 start_passthrough_1 $end
   $var wire 1 9 start_passthrough_2 $end
   $var wire 1 : start_passthrough_3 $end
   $var wire 1 0 run $end
   $var wire 1 ; mul_sign1_out $end
   $var wire 1 $ mul_sign2_out $end
   $var wire 1 < mul_carryout_out $end
   $var wire 1 = mul_sign1_in $end
   $var wire 1 > mul_sign2_in $end
   $var wire 1 ? mul_carryout_in $end
   $var wire 5 @ mul_exp1_out [4:0] $end
   $var wire 5 % mul_exp2_out [4:0] $end
   $var wire 5 A mul_exp1_in [4:0] $end
   $var wire 5 B mul_exp2_in [4:0] $end
   $var wire 13 C mul_product_out [12:0] $end
   $var wire 13 D mul_product_in [12:0] $end
   $var wire 1 E mul_round_loss_s1_out $end
   $var wire 1 F mul_round_loss_s2 $end
   $var wire 1 G mul_stall $end
   $var wire 1 H start_passthrough_0 $end
   $var wire 1 I mul_sign_result $end
   $var wire 5 J mul_sum_exp [4:0] $end
   $var wire 1 K mul_ovf $end
   $var wire 1 L mul_unf $end
   $var wire 16 M mul_result [15:0] $end
   $var wire 12 N mul_frac_product [11:0] $end
   $var wire 10 O mul_significand_rounded [9:0] $end
   $var wire 5 P mul_final_exp [4:0] $end
   $var wire 1 Q add_sign_shifted_in $end
   $var wire 1 R add_sign_not_shifted_in $end
   $var wire 1 &! add_sign_shifted_out $end
   $var wire 1 '! add_sign_not_shifted_out $end
   $var wire 13 (! frac_shifted_out [12:0] $end
   $var wire 13 )! frac_not_shifted_out [12:0] $end
   $var wire 13 S frac_shifted_in [12:0] $end
   $var wire 13 T frac_not_shifted_in [12:0] $end
   $var wire 5 *! add_exp_max_out [4:0] $end
   $var wire 5 U add_exp_max_in [4:0] $end
   $var wire 1 +! add_round_loss_s1_out $end
   $var wire 1 V add_round_loss_s2_in $end
   $var wire 1 W add_sign_out $end
   $var wire 1 X add_sign_in $end
   $var wire 13 Y add_sum_out [12:0] $end
   $var wire 13 Z add_sum_in [12:0] $end
   $var wire 1 [ add_carry_out $end
   $var wire 1 \ add_carry_in $end
   $var wire 5 U add_exp_max_s2_out [4:0] $end
   $var wire 5 ] add_exp_max_s3_in [4:0] $end
   $var wire 1 ^ add_round_loss_s3_in $end
   $var wire 16 _ accumulate_result [15:0] $end
   $var wire 5 ` add_flags [4:0] $end
   $scope module add1 $end
    $var wire 16 M floating_point1_in [15:0] $end
    $var wire 16 & floating_point2_in [15:0] $end
    $var wire 1 &! sign_shifted $end
    $var wire 13 (! frac_shifted [12:0] $end
    $var wire 1 '! sign_not_shifted $end
    $var wire 13 )! frac_not_shifted [12:0] $end
    $var wire 5 *! exp_max [4:0] $end
    $var wire 1 +! rounding_loss $end
    $var wire 5 1 unsigned_exp_diff [4:0] $end
    $var wire 1 2 cmp_out $end
    $var wire 6 a u_exp1 [5:0] $end
    $var wire 6 ' u_exp2 [5:0] $end
    $var wire 6 3 diff [5:0] $end
    $var wire 1 b frac_leading_bit_fp1 $end
    $var wire 1 ( frac_leading_bit_fp2 $end
   $upscope $end
   $scope module add2 $end
    $var wire 13 S frac1 [12:0] $end
    $var wire 1 Q sign1 $end
    $var wire 13 T frac2 [12:0] $end
    $var wire 1 R sign2 $end
    $var wire 5 U exp_max_in [4:0] $end
    $var wire 1 W sign_out $end
    $var wire 13 Y sum [12:0] $end
    $var wire 1 [ carry_out $end
    $var wire 5 U exp_max_out [4:0] $end
    $var wire 14 c frac1_signed [13:0] $end
    $var wire 14 d frac2_signed [13:0] $end
    $var wire 14 e sum_signed [13:0] $end
    $scope module add_signed_fracs $end
     $var wire 14 c frac1 [13:0] $end
     $var wire 14 d frac2 [13:0] $end
     $var wire 14 e sum [13:0] $end
     $var wire 1 [ ovf $end
    $upscope $end
    $scope module change_to_signed1 $end
     $var wire 1 Q sign $end
     $var wire 13 S frac_unsigned [12:0] $end
     $var wire 14 c frac_signed [13:0] $end
    $upscope $end
    $scope module change_to_signed2 $end
     $var wire 1 R sign $end
     $var wire 13 T frac_unsigned [12:0] $end
     $var wire 14 d frac_signed [13:0] $end
    $upscope $end
    $scope module change_to_unsigned $end
     $var wire 14 e frac_signed [13:0] $end
     $var wire 1 W sign $end
     $var wire 13 Y frac_unsigned [12:0] $end
     $var wire 14 f rfrac_signed [13:0] $end
    $upscope $end
   $upscope $end
   $scope module add3 $end
    $var wire 1 -! ovf_in $end
    $var wire 1 -! unf_in $end
    $var wire 1 -! dz $end
    $var wire 1 -! inv $end
    $var wire 5 ] exponent_max_in [4:0] $end
    $var wire 1 X sign_in $end
    $var wire 13 Z frac_in [12:0] $end
    $var wire 1 \ carry_out $end
    $var wire 16 _ floating_point_out [15:0] $end
    $var wire 5 ` flags [4:0] $end
    $var wire 1 ^ round_loss $end
    $var wire 1 g inexact $end
    $var wire 5 h exp_minus_shift_amount [4:0] $end
    $var wire 13 i shifted_frac [12:0] $end
    $var wire 5 j shifted_amount [4:0] $end
    $var wire 5 k exp_out [4:0] $end
    $var wire 1 l ovf $end
    $var wire 1 m unf $end
    $var wire 6 n u_exp1 [5:0] $end
    $var wire 6 o u_shifted_amount [5:0] $end
    $var wire 6 p u_result [5:0] $end
    $var wire 12 q round_this [11:0] $end
    $var wire 16 r round_out [15:0] $end
    $var wire 1 s round_flag $end
    $var wire 1 t G $end
    $var wire 1 u R $end
    $var wire 10 v rounded_fraction [9:0] $end
    $scope module shift_left $end
     $var wire 13 Z fraction [12:0] $end
     $var wire 13 i result [12:0] $end
     $var wire 5 j shifted_amount [4:0] $end
    $upscope $end
   $upscope $end
   $scope module mul1 $end
    $var wire 1 %! clk $end
    $var wire 1 # nRST $end
    $var wire 1 ) active $end
    $var wire 16 6 fp1_in [15:0] $end
    $var wire 16 * fp2_in [15:0] $end
    $var wire 1 ; sign1 $end
    $var wire 1 $ sign2 $end
    $var wire 5 @ exp1 [4:0] $end
    $var wire 5 % exp2 [4:0] $end
    $var wire 13 C product [12:0] $end
    $var wire 1 < carry_out $end
    $var wire 1 E round_loss $end
    $var wire 1 G mul_stall $end
    $var wire 1 w frac_leading_bit_fp1 $end
    $var wire 1 + frac_leading_bit_fp2 $end
    $var wire 4 x count [3:0] $end
    $var wire 1 y mul_start $end
    $var wire 1 z mul_stop $end
    $scope module MUL $end
     $var wire 32 .! num_bits [31:0] $end
     $var wire 1 %! clk $end
     $var wire 1 # nRST $end
     $var wire 1 y start $end
     $var wire 1 z stop $end
     $var wire 13 { op1 [12:0] $end
     $var wire 13 , op2 [12:0] $end
     $var wire 13 C result [12:0] $end
     $var wire 1 < overflow $end
     $var wire 1 E round_loss $end
     $var wire 13 | multiplicand [12:0] $end
     $var wire 13 } next_multiplicand [12:0] $end
     $var wire 26 ~ product [25:0] $end
     $var wire 26 4 next_product [25:0] $end
    $upscope $end
   $upscope $end
   $scope module mul2 $end
    $var wire 1 = sign1 $end
    $var wire 1 > sign2 $end
    $var wire 5 A exp1 [4:0] $end
    $var wire 5 B exp2 [4:0] $end
    $var wire 1 I sign_out $end
    $var wire 5 J sum_exp [4:0] $end
    $var wire 1 K ovf $end
    $var wire 1 L unf $end
    $var wire 1 ? carry $end
    $scope module add_EXPs $end
     $var wire 1 ? carry $end
     $var wire 5 A exp1 [4:0] $end
     $var wire 5 B exp2 [4:0] $end
     $var wire 5 J sum [4:0] $end
     $var wire 1 K ovf $end
     $var wire 1 L unf $end
     $var wire 5 !! r_exp1 [4:0] $end
     $var wire 5 "! r_exp2 [4:0] $end
     $var wire 5 #! r_sum [4:0] $end
    $upscope $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
0#
0$
b00000 %
b0000000000000000 &
b000000 '
0(
0)
b0000000000000000 *
0+
b0000000000000 ,
b0000000000000000 -
0.
b0000000000000000 /
00
b00000 1
02
b000000 3
b00000000000000000000000000 4
15
b0000000000000000 6
07
08
09
0:
0;
0<
0=
0>
0?
b00000 @
b00000 A
b00000 B
b0000000000000 C
b0000000000000 D
0E
0F
0G
0H
0I
b10001 J
0K
1L
b0000000000000000 M
b000000000000 N
b0000000000 O
b00000 P
0Q
0R
b0000000000000 S
b0000000000000 T
b00000 U
0V
0W
0X
b0000000000000 Y
b0000000000000 Z
0[
0\
b00000 ]
0^
b0000000000000000 _
b00000 `
b000000 a
0b
b00000000000000 c
b00000000000000 d
b00000000000000 e
b00000000000000 f
0g
b00000 h
b0000000000000 i
b00000 j
b00000 k
0l
0m
b000000 n
b000000 o
b000000 p
b000000000000 q
b0000000000000000 r
0s
0t
0u
b0000000000 v
0w
b0000 x
0y
1z
b0000000000000 {
b0000000000000 |
b0000000000000 }
b00000000000000000000000000 ~
b10000 !!
b10000 "!
b00000 #!
b0000000000000000 $!
0%!
0&!
0'!
b0000000000000 (!
b0000000000000 )!
b00000 *!
0+!
b00000000000000000000000000000001 ,!
0-!
b00000000000000000000000000001101 .!
b00000000000000000000000000000100 /!
b00000000000000000000000000010000 0!
b00000000000000000000000000000010 1!
b000 2!
#500
1%!
#1000
1#
0%!
#1500
b10001 %
b0100010100000000 &
b010001 '
1(
b0100011100000000 *
1+
b1110000000000 ,
b0100000000000000 -
b10001 1
12
b010001 3
1%!
b1010000000000 )!
b10001 *!
#2000
0%!
#2500
1%!
#3000
0%!
#3500
1%!
#4000
0%!
#4500
1.
b0100000000000000 /
b0100000000000000 6
b10000 @
1w
b1000000000000 {
1%!
#5000
0%!
#5500
1)
0.
10
b00000000000001110000000000 4
05
17
b10000 A
b10001 B
1G
1H
b10010 J
0L
b1010000000000 T
b10001 U
b1010000000000 Y
b01010000000000 d
b01010000000000 e
b01010000000000 f
b0001 x
1y
0z
b1000000000000 }
b00000 !!
b00001 "!
b00001 #!
1%!
#6000
0%!
#6500
0)
b00000000000000111000000000 4
b0000000000001 C
1E
b1010000000000 Z
b10001 ]
b0100010100000000 _
b10001 h
b1010000000000 i
b10001 k
b010001 n
b010001 p
b010000000000 q
b0100010100000000 r
b0100000000 v
b0010 x
0y
b1000000000000 |
b00000000000001110000000000 ~
b0100010100000000 $!
1%!
#7000
0%!
#7500
b00001 1
02
b000001 3
b00000000000000011100000000 4
b0000000000000 C
b0000000000001 D
1F
b0100100000000000 M
b000000000001 N
b10010 P
b010010 a
1b
b0011 x
b00000000000000111000000000 ~
1%!
b0101000000000 (!
b1000000000000 )!
b10010 *!
#8000
0%!
#8500
b10001 1
12
b010001 3
b00000000000000001110000000 4
b0000000000000 D
b0000000000000000 M
b000000000000 N
b00000 P
b0101000000000 S
b1000000000000 T
b10010 U
b1101000000000 Y
b000000 a
0b
b00101000000000 c
b01000000000000 d
b01101000000000 e
b01101000000000 f
b0100 x
b00000000000000011100000000 ~
1%!
b0000000000000 (!
b1010000000000 )!
b10001 *!
#9000
0%!
#9500
b00000000000000000111000000 4
b0000000000000 S
b1010000000000 T
b10001 U
b1010000000000 Y
b1101000000000 Z
b10010 ]
b0100101010000000 _
b00000000000000 c
b01010000000000 d
b01010000000000 e
b01010000000000 f
b10010 h
b1101000000000 i
b10010 k
b010010 n
b010010 p
b101000000000 q
b0100101010000000 r
b1010000000 v
b0101 x
b00000000000000001110000000 ~
b0100101010000000 $!
1%!
#10000
0%!
#10500
b00000000000000000011100000 4
b1010000000000 Z
b10001 ]
b0100010100000000 _
b10001 h
b1010000000000 i
b10001 k
b010001 n
b010001 p
b010000000000 q
b0100010100000000 r
b0100000000 v
b0110 x
b00000000000000000111000000 ~
b0100010100000000 $!
1%!
#11000
0%!
#11500
b00000000000000000001110000 4
b0111 x
b00000000000000000011100000 ~
1%!
#12000
0%!
#12500
b00000000000000000000111000 4
b1000 x
b00000000000000000001110000 ~
1%!
#13000
0%!
#13500
b00000000000000000000011100 4
b1001 x
b00000000000000000000111000 ~
1%!
#14000
0%!
#14500
b00000000000000000000001110 4
b1010 x
b00000000000000000000011100 ~
1%!
#15000
0%!
#15500
b00000000000000000000000111 4
b1011 x
b00000000000000000000001110 ~
1%!
#16000
0%!
#16500
b01000000000000000000000011 4
b1100 x
b00000000000000000000000111 ~
1%!
#17000
0%!
#17500
b01100000000000000000000001 4
b1000000000000 C
b1101 x
b01000000000000000000000011 ~
1%!
#18000
0%!
#18500
b00001 1
02
b000001 3
b01110000000000000000000000 4
b1100000000000 C
b1000000000000 D
b0100100000000000 M
b10010 P
b010010 a
1b
b1110 x
b01100000000000000000000001 ~
1%!
b0101000000000 (!
b1000000000000 )!
b10010 *!
#19000
0%!
#19500
b1110000000000 C
b1100000000000 D
0E
0G
b0100101000000000 M
b100000000000 N
b1000000000 O
b0101000000000 S
b1000000000000 T
b10010 U
b1101000000000 Y
b00101000000000 c
b01000000000000 d
b01101000000000 e
b01101000000000 f
b0000 x
1z
b01110000000000000000000000 ~
1%!
b1100000000000 )!
#20000
0%!
#20500
18
b1110000000000 D
0F
0H
b0100101100000000 M
b110000000000 N
b1100000000 O
b1100000000000 T
b0001000000000 Y
b1101000000000 Z
1[
b10010 ]
b0100101010000000 _
b01100000000000 d
b00001000000000 e
b00001000000000 f
b10010 h
b1101000000000 i
b10010 k
b010010 n
b010010 p
b101000000000 q
b0100101010000000 r
b1010000000 v
b0100101010000000 $!
1%!
b1110000000000 )!
#21000
0%!
#21500
08
19
b1110000000000 T
b0011000000000 Y
b0001000000000 Z
1\
b0100110001000000 _
b01110000000000 d
b00011000000000 e
b00011000000000 f
b01111 h
b1000000000000 i
b00011 j
b10011 k
b000011 o
b001111 p
b000100000000 q
b0100110001000000 r
b0001000000 v
b0100110001000000 $!
1%!
#22000
0%!
#22500
09
1:
b0011000000000 Z
b0100110011000000 _
b10000 h
b1100000000000 i
b00010 j
b000010 o
b010000 p
b001100000000 q
b0100110011000000 r
b0011000000 v
b0100110011000000 $!
1%!
#23000
0%!
#23500
00
15
07
0:
1%!
#24000
0%!
#24500
1%!
#25000
0%!
#25500
1%!
#26000
0%!
#26500
1%!
#27000
0%!
#27500
1%!
#28000
0%!
#28500
1%!
#29000
0%!
#29500
b00000 %
b0100110011000000 &
b010011 '
b0000000000000000 *
0+
b0000000000000 ,
b0000000000000000 -
1.
b0000000000000000 /
12
b0000000000000000 6
b00000 @
0w
b0000000000000 {
1%!
b0111000000000 (!
b1001100000000 )!
b10011 *!
#30000
0%!
#30500
1)
0.
10
b00010 1
b000010 3
05
17
b00000 A
b00000 B
1G
1H
b10001 J
1L
b0100011100000000 M
b10001 P
b0111000000000 S
b1001100000000 T
b10011 U
b0000100000000 Y
b010001 a
b00111000000000 c
b01001100000000 d
b00000100000000 e
b00000100000000 f
b0001 x
1y
0z
b0000000000000 }
b10000 !!
b10000 "!
b00000 #!
1%!
b0011100000000 (!
#31000
0%!
#31500
0)
b00111000000000000000000000 4
b0011100000000 S
b1101000000000 Y
b0000100000000 Z
0[
b10011 ]
b0101000000100000 _
b00011100000000 c
b01101000000000 e
b01101000000000 f
b01111 h
b1000000000000 i
b00100 j
b10100 k
b010011 n
b000100 o
b001111 p
b000010000000 q
b0101000000100000 r
b0000100000 v
b0010 x
0y
b0000000000000 |
b0101000000100000 $!
1%!
#32000
0%!
#32500
b00011100000000000000000000 4
b0111000000000 C
b1101000000000 Z
0\
b0100111010000000 _
b10011 h
b1101000000000 i
b00000 j
b10011 k
b000000 o
b010011 p
b101000000000 q
b0100111010000000 r
b1010000000 v
b0011 x
b00111000000000000000000000 ~
b0100111010000000 $!
1%!
#33000
0%!
#33500
b00001110000000000000000000 4
b0011100000000 C
b0111000000000 D
b0100011110000000 M
b111000000000 N
b1110000000 O
b0100 x
b00011100000000000000000000 ~
1%!
b0011110000000 (!
#34000
0%!
#34500
b00000111000000000000000000 4
b0001110000000 C
b0011100000000 D
b0100010111000000 M
b011100000000 N
b0111000000 O
b0011110000000 S
b1101010000000 Y
b00011110000000 c
b01101010000000 e
b01101010000000 f
b0101 x
b00001110000000000000000000 ~
1%!
b0010111000000 (!
#35000
0%!
#35500
b00000011100000000000000000 4
b0000111000000 C
b0001110000000 D
b0100010011100000 M
b001110000000 N
b0011100000 O
b0010111000000 S
b1100011000000 Y
b1101010000000 Z
b0100111010100000 _
b00010111000000 c
b01100011000000 e
b01100011000000 f
b1101010000000 i
b101010000000 q
b0100111010100000 r
b1010100000 v
b0110 x
b00000111000000000000000000 ~
b0100111010100000 $!
1%!
b0010011100000 (!
#36000
0%!
#36500
b00000001110000000000000000 4
b0000011100000 C
b0000111000000 D
b0100010001110000 M
b000111000000 N
b0001110000 O
b0010011100000 S
b1011111100000 Y
b1100011000000 Z
b0100111000110000 _
b00010011100000 c
b01011111100000 e
b01011111100000 f
b1100011000000 i
b100011000000 q
b0100111000110000 r
b1000110000 v
b0111 x
b00000011100000000000000000 ~
b0100111000110000 $!
1%!
b0010001110000 (!
#37000
0%!
#37500
b00000000111000000000000000 4
b0000001110000 C
b0000011100000 D
b0100010000111000 M
b000011100000 N
b0000111000 O
b0010001110000 S
b1011101110000 Y
b1011111100000 Z
b0100110111111000 _
b00010001110000 c
b01011101110000 e
b01011101110000 f
b1011111100000 i
b011111100000 q
b0100110111111000 r
b0111111000 v
b1000 x
b00000001110000000000000000 ~
b0100110111111000 $!
1%!
b0010000111000 (!
