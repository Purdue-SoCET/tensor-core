var g_data = {"name":"./src/command_FSM.sv","src":"`timescale 1ps/1ps\n`include \"command_FSM_if.vh\"\n\nmodule command_FSM (\n    input logic CLK,\n    input logic nRST,\n    command_FSM_if.dut mycmd\n);\n    import dram_pkg::*;\n    localparam logic [1:0] IDLE_R = 2'b00;\n    localparam logic [1:0] HIT = 2'b01;\n    localparam logic [1:0] MISS = 2'b10;\n    localparam logic [1:0] CONFLICT = 2'b11;\n    logic nram_wait;\n\n    always_ff @(posedge CLK, negedge nRST) begin\n        if (!nRST) begin\n            mycmd.cmd_state <= POWER_UP;\n        end else begin\n            mycmd.cmd_state <= mycmd.ncmd_state;\n        end\n    end\n\n    always_ff @(posedge CLK, negedge nRST) begin\n        if (!nRST) begin\n            mycmd.ram_wait <= 1;\n        end else begin\n            mycmd.ram_wait <= nram_wait;\n        end\n    end\n\n    always_comb begin\n        mycmd.ncmd_state = mycmd.cmd_state;\n        mycmd.row_resolve = 1'b0;\n        mycmd.init_req = 0;\n        nram_wait = 1;\n        casez (mycmd.cmd_state)\n\n            POWER_UP: begin\n                mycmd.init_req = 1;\n                if (mycmd.init_done) mycmd.ncmd_state = IDLE;\n            end\n\n            REFRESH: begin\n                mycmd.ncmd_state = REFRESHING;\n                \n            end\n\n            REFRESHING: begin\n                if (mycmd.tREF_done) begin\n                    mycmd.ncmd_state = IDLE;     \n                end\n            end\n\n            IDLE: begin\n                if (mycmd.rf_req) begin\n                    mycmd.ncmd_state = (mycmd.all_row_closed) ? REFRESH : PRECHARGE;\n                end\n                else if (mycmd.dWEN || mycmd.dREN) begin\n                    if (mycmd.row_stat == HIT) mycmd.ncmd_state = mycmd.dWEN ? WRITE : READ;\n                    else if(mycmd.row_stat == CONFLICT) mycmd.ncmd_state = PRECHARGE;\n                    else if (mycmd.row_stat == MISS) mycmd.ncmd_state = ACTIVATE;\n                end\n            end\n\n            ACTIVATE: begin\n                if (mycmd.rf_req) begin mycmd.ncmd_state = (mycmd.all_row_closed) ? REFRESH : PRECHARGE; end\n                else begin mycmd.ncmd_state = ACTIVATING; end\n            end\n\n            ACTIVATING: begin\n                if (mycmd.tACT_done) begin\n                    mycmd.ncmd_state = mycmd.rf_req ? PRECHARGE : mycmd.dWEN ? WRITE : READ;\n                end\n            end\n\n            WRITE: begin mycmd.ncmd_state = mycmd.rf_req ? PRECHARGE : WRITING; end\n            READ : begin mycmd.ncmd_state = mycmd.rf_req ? PRECHARGE : READING; end\n            \n            WRITING: begin\n                if (mycmd.tWR_done) begin\n                    nram_wait = 1'b0;\n                    if (mycmd.rf_req) begin mycmd.ncmd_state = PRECHARGE; end\n                    //TODO Discuss this with Dhruv\n                    // else if (mycmd.dWEN || mycmd.dREN) begin\n                    //     if (mycmd.row_stat == HIT) mycmd.ncmd_state = mycmd.dWEN ? WRITE : READ;\n                    //     else if(mycmd.row_stat == CONFLICT) mycmd.ncmd_state = PRECHARGE;\n                    //     else if (mycmd.row_stat == MISS) mycmd.ncmd_state = ACTIVATE;\n                    // end \n                    else begin\n                        mycmd.ncmd_state = IDLE;\n                    end \n                end\n            end\n\n            READING: begin\n                if (mycmd.tRD_done) begin\n                    nram_wait = 1'b0;\n                    if (mycmd.rf_req) begin mycmd.ncmd_state = PRECHARGE; end\n                    //TODO Discuss this with Dhruv\n                    // else if (mycmd.dWEN || mycmd.dREN) begin\n                    //     if (mycmd.row_stat == HIT) mycmd.ncmd_state = mycmd.dWEN ? WRITE : READ;\n                    //     else if(mycmd.row_stat == CONFLICT) mycmd.ncmd_state = PRECHARGE;\n                    //     else if (mycmd.row_stat == MISS) mycmd.ncmd_state = ACTIVATE;\n                    // end\n                    else begin\n                        mycmd.ncmd_state = IDLE;\n                    end \n                end \n            end\n\n            PRECHARGE: begin\n                mycmd.ncmd_state = PRECHARGING;\n            end\n\n            PRECHARGING: begin\n                if (mycmd.tPRE_done) begin\n                    mycmd.row_resolve = 1'b1;\n                    mycmd.ncmd_state = mycmd.rf_req ? REFRESH : IDLE;\n                end\n\n            end\n        endcase\n    end\n\nendmodule\n","lang":"verilog"};
processSrcData(g_data);