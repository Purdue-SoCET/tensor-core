var g_data = {"name":"./include/row_open_if.vh","src":"`ifndef ROW_OPEN_IF\n`define ROW_OPEN_IF\n`include \"dram_pkg.vh\"\n\ninterface row_open_if();\n    import dram_pkg::*;\n    //We are following 512 x 8 addressing map\n    logic [ROW_BITS-1:0] row;\n    logic [1:0] bank, bank_group;\n\n    //Conflicted row\n    logic [ROW_BITS-1:0] row_conflict;\n    logic all_row_closed;\n    logic tACT_done;\n\n    //Memory request\n    logic req_en, refresh, row_resolve;\n    logic [1:0] row_stat; //00 IDLE, 01 HIT, 10 MISS, 11 CONFLICT\n\n    modport dut (\n        input bank_group, bank, row, req_en, refresh, row_resolve, tACT_done,\n        output row_stat, row_conflict, all_row_closed\n    );\n\n    modport tb  (\n        input  row_stat, row_conflict,\n        output req_en, refresh, bank_group, bank, row\n    );\nendinterface\n`endif","lang":"verilog"};
processSrcData(g_data);